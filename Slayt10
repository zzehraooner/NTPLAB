using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Hafta10OrnekUygulamalar
{
    
    delegate void OlayYoneticisi();
    class Buton
    {
        OlayYoneticisi[] olay = new OlayYoneticisi[2];
        //Olay yöneticimiz türünden iki elemanlı bir dizi oluşturduk.

        public event OlayYoneticisi ButonKlik
        {
            add
            {
                int i;
                for (i = 0; i < 2; ++i)
                    if (olay[i] == null)//Buradaki value olaya eklenen metottur. 
                    { olay[i] = value; break; }
                if (i == 2) 
                    Console.WriteLine("Olaya en fazla iki metot eklenebilir.");
            }
            remove
            {
                int i;
                for (i = 0; i < 2; ++i)
                    if (olay[i] == value)
                    {
                        olay[i] = null; break;
                    }
                if (i == 2)
                    Console.WriteLine("Metot bulunamadı");
            }
        }
        public void Kliklendi()
        {
            for (int i = 0; i < 2; ++i)
                if (olay[i] != null)
                    olay[i]();
        }
    }
    class Pencere
    {
        int PencereNo;
        public Pencere(int no)
        { PencereNo = no; }

    
    public void ButonKlik()
    {
        Console.WriteLine("{0} nolu pencere olayı  algıladı.",PencereNo);
}
}
public class OlayTest
{
    static void Main()
    {
        Buton buton = new Buton();
        Pencere p1 = new Pencere(1);
        Pencere p2 = new Pencere(2);
        //Geçerli ekleme:
        buton.ButonKlik += new OlayYoneticisi(ButonKlik);
        buton.Kliklendi();
        Console.WriteLine();
        //Geçerli ekleme:
        buton.ButonKlik += new OlayYoneticisi(p1.ButonKlik);
        buton.Kliklendi();
        Console.WriteLine();  //Geçersiz ekleme (Olay dolu):
        buton.ButonKlik += new OlayYoneticisi(p2.ButonKlik);
        buton.Kliklendi();
        Console.WriteLine();
        buton.ButonKlik -= new OlayYoneticisi(p1.ButonKlik);
        buton.Kliklendi();
        Console.WriteLine();
        buton.ButonKlik -= new OlayYoneticisi(ButonKlik);
        buton.Kliklendi();
        Console.WriteLine();
        //Geçersiz çıkarma (metot yok):
        buton.ButonKlik -= new OlayYoneticisi(ButonKlik);
        buton.Kliklendi();
    }
    public static void ButonKlik()
    { Console.WriteLine("Buton kliklendi"); }
}
    









    delegate void OlayYoneticisi();
    class deneme
    {
        OlayYoneticisi[] evnt = new OlayYoneticisi[3];
        public int i = 0; public int j = 0;
        public event OlayYoneticisi Olay
        {
            add
            {
                if (evnt[i] == null)
                {
                    evnt[i] = value;
                    Console.WriteLine((i + 1) + ". Olay");
                }
                i++;
                if (i == 3)
                { --i; Console.WriteLine("Olay listesi Dolu"); }
            }
            remove
            {
                Console.WriteLine(i);
                {
                    if (evnt[i] == value)
                    {
                        evnt[i] = null;
                        Console.WriteLine(" Olay çıkarıldı.");
                    }
                    i--;
                    if (i == -1)
                        Console.WriteLine("Olay bulunamadı");
                }
            }
        }  // olayları ateşlemek için
        public void Olayim()
        {
            for (int j = 0; j <= i; j++)
            { if (evnt[j] != null) evnt[j](); }
        }
    }
    class Program
    {
        static void Metot1()
        {
            Console.WriteLine("Metot1");
        }
        static void Metot2()
        { Console.WriteLine("Metot2"); }
        static void Main()
        {
            deneme d = new deneme();
            d.Olay += new OlayYoneticisi(Metot1);
            d.Olay += new OlayYoneticisi(Metot2);
            d.Olay += new OlayYoneticisi(Metot1);
            d.Olayim();
            d.Olay -= new OlayYoneticisi(Metot1);
            d.Olay -= new OlayYoneticisi(Metot2);
            d.Olay -= new OlayYoneticisi(Metot1);
            d.Olayim();
        }
    }






    


    
    public class UrunTemel
    {
        private int urunKodu;
        private double urunFiyati;
        private string urunBilgisi;
        public UrunTemel(int kod, double
        fiyat, string bilgi)
        {
            urunKodu = kod;
            urunFiyati = fiyat;
            urunBilgisi = bilgi;
        }
        public int UrunKodu
        {
            get { return urunKodu; }
        }
        public double BirimFiyat
        {
            get { return urunFiyati; }
        }
        public string UrunTanimi
        {
            get { return urunBilgisi; }
        }
    }
    public class Lastik : UrunTemel
    {
        private int capi;
        private int genislik;
        private string tipi; public Lastik(int kodu, double fiyat,
       string bilgi) : base(kodu, fiyat, bilgi) { }
        public int Cap
        {
            get { return capi; }
            set { capi = value; }
        }
        public int Genislik
        {
            get { return genislik; }
            set { genislik = value; }
        }
        public string Tip
        {
            get { return tipi; }
            set { tipi = value; }
        }
        public override string ToString()
        {
            return UrunKodu.ToString() + " " +
       BirimFiyat.ToString() + " " + UrunTanimi + " "
       + Cap.ToString() + " " + Genislik.ToString() +
       Tip;
        }
    }


public class Silecek : UrunTemel
{
    private int uzunluk;
    public Silecek(int kodu, double fiyat,
   string bilgi) : base(kodu, fiyat, bilgi)
    {
    }
    public int Uzunluk
    {
        get { return uzunluk; }
        set { uzunluk = value; }
    }
    public override string ToString()
    {
        return UrunKodu.ToString() + " " +
       BirimFiyat.ToString() + " " + UrunTanimi +
       " " + Uzunluk.ToString();
    }
}
    public class Urunler<T> where T : UrunTemel
    {
        private List<T> urunListe;
        public Urunler()
        {
            urunListe = new List<T>();
        }
        public void Ekle(T uye)
        {
            urunListe.Add(uye);
        }
        public void Sil(T uye)
        {
            urunListe.Remove(uye);
        }
        public void Listele()
        {
            foreach (T uye in urunListe)
            {

                Console.WriteLine(uye.ToString());
            }
        }
        class Ana
        {
            static void Main()
            {
                Urunler<UrunTemel> urunler = new
           Urunler<UrunTemel>();
                Lastik lst = new Lastik(1000, 10,
                "Otomobil Lastiği");
                lst.Tip = "Kış Lastiği";
                lst.Cap = 185;
                lst.Genislik = 75;
                Silecek slc = new Silecek(1001, 5,
               "On silecek takimi");
                slc.Uzunluk = 60;
                urunler.Ekle(lst);
                urunler.Ekle(slc);
                urunler.Listele();
            }
        }

    }
}
